name: Release

on:
  push:
    branches:
    - main

env:
  AWS_REGION: us-west-1
  AWS_ROLE: arn:aws:iam::270074865685:role/terraform-module-ci-test
  ZONE: ${{secrets.ZONE}}

permissions: write-all

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          release-type: terraform-module
      - uses: peter-evans/create-or-update-comment@v4
        name: 'Remind to wait'
        if: steps.release-please.outputs.pr
        with:
          issue-number: ${{ fromJson(steps.release-please.outputs.pr).number }}
          body: |
            Please make sure e2e tests pass before merging this PR!
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v4
        if: steps.release-please.outputs.pr
        with:
          token: ${{secrets.GITHUB_TOKEN}}
      - uses: DeterminateSystems/nix-installer-action@main
        if: steps.release-please.outputs.pr
      - uses: nicknovitski/nix-develop@v1
        if: steps.release-please.outputs.pr
      - uses: aws-actions/configure-aws-credentials@v4
        if: steps.release-please.outputs.pr
        with:
          role-to-assume: ${{env.AWS_ROLE}}
          role-session-name: ${{github.job}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
          aws-region: ${{env.AWS_REGION}}
      - name: 'Restore Terraform Cache'
        if: steps.release-please.outputs.pr
        id: cache-terraform-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/.terraform
          key: terraform
      - run: terraform init -upgrade
        if: steps.release-please.outputs.pr
      - name: 'Cache Terraform'
        if: steps.release-please.outputs.pr
        id: cache-terraform-save
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/.terraform
          key: ${{ steps.cache-terraform-restore.outputs.cache-primary-key }}
      - name: 'Terratest'
        run: |
          cd ./tests
          export ACME_SERVER_URL="https://acme-v02.api.letsencrypt.org/directory"
          go test -v -timeout=40m -parallel=10
        if: steps.release-please.outputs.pr
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_OWNER: rancher
          IDENTIFIER: ${{github.run_id}}
          ZONE: ${{env.ZONE}}
      - name: 'ImageCheck'
        run: ./validate-image.sh
        if: steps.release-please.outputs.pr
      - name: 'Report Success'
        uses: peter-evans/create-or-update-comment@v4
        if: steps.release-please.outputs.pr
        with:
          issue-number: ${{ fromJson(steps.release-please.outputs.pr).number }}
          body: |
            End to End Tests Passed!
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
