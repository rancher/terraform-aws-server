#!/bin/env sh

cleanup() {
  echo "Cleaning Up..."

  echo 'Getting Nix Usage...'
  echo "Nix store is using $(du -hs /nix/store)"

  echo 'Archiving Nix Profile...'
  nix develop --profile /tmp/terraform-aws-server-nix-env --extra-experimental-features nix-command --extra-experimental-features flakes --command bash -c "echo done"
}

if ! which "$0" | grep -q nix; then
	print 'Entering Environment...'

  print 'Updating Nix Cache...'
  nix flake update --extra-experimental-features nix-command --extra-experimental-features flakes

  print 'Starting...'
  nix develop \
    --ignore-environment \
    --extra-experimental-features nix-command \
    --extra-experimental-features flakes \
    --keep HOME \
    --keep SSH_AUTH_SOCK \
    --keep GITHUB_TOKEN \
    --keep AWS_ROLE \
    --keep AWS_REGION \
    --keep AWS_DEFAULT_REGION \
    --keep AWS_ACCESS_KEY_ID \
    --keep AWS_SECRET_ACCESS_KEY \
    --keep AWS_SESSION_TOKEN \
    --keep TERM \
    --keep XDG_DATA_DIRS \
    /tmp/terraform-aws-server-nix-env \
    --command bash -c "bash --rcfile .envrc"

  print 'Exiting Dev Environment...'
  cleanup
else
  # this is run inside the dev environment so we can make assumptions about what is available
	echo 'Setting up dev environment...'

	. .functions
	. .variables
	. .rcs
	. .aliases


	if [ -z "$SSH_AUTH_SOCK" ]; then eval "$(ssh-agent -s)"; ssh-add; fi

	if ! env | grep -q 'AWS'; then
		echo 'Unable to find AWS authentication information in the environment, please make sure you authenticate with AWS.'
    echo 'Try using the "aws" cli included in the environment.'
	fi
fi
