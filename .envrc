#!/bin/env sh

if [ -z "${NIX_ENV_LOADED}" ]; then
	printf "entering environment..."
  NIX_ENV_LOADED="$(pwd)"
  export NIX_ENV_LOADED

  nix flake update --extra-experimental-features nix-command --extra-experimental-features flakes;
  echo "nix store is using $(du -hs /nix/store)"

  nix develop \
    --ignore-environment \
    --extra-experimental-features nix-command \
    --extra-experimental-features flakes \
    --keep HOME \
    --keep SSH_AUTH_SOCK \
    --keep GITHUB_TOKEN \
    --keep AWS_ROLE \
    --keep AWS_REGION \
    --keep AWS_DEFAULT_REGION \
    --keep AWS_ACCESS_KEY_ID \
    --keep AWS_SECRET_ACCESS_KEY \
    --keep AWS_SESSION_TOKEN \
    --keep TERM \
    --keep XDG_DATA_DIRS \
    --keep NIX_ENV_LOADED \
    "$(pwd)" || unset NIX_ENV_LOADED;

else
	printf "setting up dev environment...\n"
  unset NIX_ENV_LOADED

	. .functions
	. .variables
	. .rcs
	. .aliases


	if [ -z "$SSH_AUTH_SOCK" ]; then eval "$(ssh-agent -s)"; ssh-add; fi
	if [ "" = "$(env | grep 'AWS')" ]; then
		printf "Unable to find AWS authentication information in the environment, \
      please make sure you authenticate with AWS. \
      Try using the 'aws' cli included in the environment.\n";
	fi
	if env | grep -q 'GITHUB_TOKEN'; then
		printf "Unable to find GITHUB authentication information in the environment, \
      please make sure you authenticate with GITHUB. \
      Try using the 'gh' cli included in the environment.\n";
	fi
fi
unset NIX_ENV_LOADED